// Author:
// Title:

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;

float paintregion (float col1, float col2, float colx, float row1, float row2, float rowx) {
    vec2 st = gl_FragCoord.xy/u_resolution.xy;
    float region = step(min(col1, col2),st.x) * step(st.x, max(col1, col2)); // between col2 and col1
    region *= max(step(colx, col2) * step(colx, col1), step(col2, colx) * step(col1, colx)); // only if both are < or > colx
    region *= step(min(row1, row2),st.y) * step(st.y, max(row1, row2)); // between row2 and row1
    region *= max(step(rowx, row2) * step(rowx, row1), step(row2, rowx) * step(row1, rowx)); // only if both are < or > rowx
    return region;  
}

float paintmini (float col1, float col2, float colx, float row1, float row2, float rowx) {
    vec2 st = gl_FragCoord.xy/u_resolution.xy;
    float region = step(min(col1, col2),st.x) * step(st.x, max(col1, col2)); // between col2 and col1
    region *= max(step(colx, col2) * step(colx, col1), step(col2, colx) * step(col1, colx)); // only if both are < or > colx
    region *= step(min(row1, row2),st.y) * step(st.y, max(row1, row2)); // between row2 and row1
    region *= max(step(rowx, row2) * step(rowx, row1), step(row2, rowx) * step(row1, rowx)); // only if both are < or > rowx
    return region;  
}

void main() {
    vec2 st = gl_FragCoord.xy/u_resolution.xy;
    vec3 color = vec3(0.0);

    float xwide = 0.02;
    float xthin = 0.01;
    float ywide = 0.02;
    float ythin = 0.01;
    
    float spda = 0.06;
    float cola = mod(0.1+u_time*spda, 1.0);
    float all = 1.0 - step(cola,st.x) * step(st.x, cola+xwide);
    float spdb = 0.09;
    float colb = mod((0.3+u_time*spdb), 1.0);
    all *= 1.0 - step(colb,st.x) * step(st.x, colb+xthin);
    float spdc = 0.07;
    float colc = mod((0.5-u_time*spdc), 1.0);
    all *= 1.0 - step(colc,st.x) * step(st.x, colc+xwide);
    
    float spdd = 0.1;
    float rowd = mod(0.1+u_time*spdd, 1.0);
    all *= 1.0 - step(rowd,st.y) * step(st.y, rowd+ywide);
    float spde = 0.08;
    float rowe = mod((0.3+u_time*spde), 1.0);
    all *= 1.0 - step(rowe,st.y) * step(st.y, rowe+ywide);
    float spdf = 0.12;
    float rowf = mod((0.5+u_time*spdf), 1.0);
    all *= 1.0 - step(rowf,st.y) * step(st.y, rowf+ythin);
    
    color = vec3(all);
    
    // Paint red
    float pred = paintregion(colb, colc, cola, rowd, rowe, rowf); 	// BC DE
    color *= vec3(1.0-0.1*pred,1.0-0.8*pred, 1.0-0.75*pred);
    pred = paintregion(cola, colc, colb, rowd, rowf, rowe); 		// AC DF
    color *= vec3(1.0-0.1*pred,1.0-0.8*pred, 1.0-0.75*pred);
    
    // Paint blue 
    float pblue = paintregion(colb, colc, cola, rowe, rowf, rowd); 	// BC EF
    color *= vec3(1.0-0.75*pblue,1.0-0.8*pblue, 1.0-0.1*pblue);
    pblue = paintregion(cola, colb, colc, rowd, rowf, rowe); 		// AB DF
    color *= vec3(1.0-0.75*pblue,1.0-0.8*pblue, 1.0-0.1*pblue);
        
    // Paint yellow 
    float pyellow = paintregion(cola, colc, colb, rowd, rowe, rowf); 	// AC DE
    color *= vec3(1.0-0.1*pyellow,1.0-0.2*pyellow, 1.0-0.8*pyellow);
    
    float miniwidth = 0.01; 
    float mini = step((cola+colc)/2.0-miniwidth,st.x) * step(st.x, (cola+colc)/2.0+miniwidth); // between col2 and col1
    mini *= max(step(colb, colc) * step(colb, cola), step(colc, colb) * step(cola, colb)); // only if both are < or > colx
    
    mini *= step(min(rowd, rowe),st.y) * step(st.y, max(rowd, rowe)); // between row2 and row1
    mini *= max(step(rowf, rowe) * step(rowf, rowd), step(rowe, rowf) * step(rowd, rowf)); // only if both are < or > rowx
    color *= 1.0 - (0.75*mini);

    gl_FragColor = vec4(color,1.0);
}










